name: "CI"

on:
  pull_request:
  push:

env:
  PHP_CURRENT: "8.2"
  PHP_NEXT: "8.3"

jobs:
  composer-json-lint:
    name: "Lint composer.json"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ env.PHP_CURRENT }}"
          ini-values: "${{ env.INI_VALUES }}"
          tools: composer-normalize, composer-require-checker
      - uses: "ramsey/composer-install@v3"

      - run: "composer validate --strict"
      - run: "composer-normalize --dry-run"

  coding-standards:
    name: "Coding Standards"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ env.PHP_CURRENT }}"
          ini-values: "${{ env.INI_VALUES }}"
          tools: cs2pr
      - uses: "ramsey/composer-install@v3"

      - run: "vendor/bin/phpcs -q --report=checkstyle | cs2pr"

  static-analysis:
    name: "Static Analysis"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ env.PHP_CURRENT }}"
          ini-values: "${{ env.INI_VALUES }}"
      - uses: "ramsey/composer-install@v3"

      - run: "vendor/bin/psalm --shepherd --stats --output-format=github --no-cache"

  tests:
    name: "Tests"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.2"
          - "8.3"
        dependencies:
          - "lowest"
          - "locked"
          - "highest"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: "${{ env.INI_VALUES }}"
      - uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "Run tests"
        timeout-minutes: 3
        run: "vendor/bin/phpunit --no-coverage --no-logging"

  code-coverage:
    name: "Code Coverage"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ env.PHP_CURRENT }}"
          ini-values: "${{ env.INI_VALUES }}"
      - uses: "ramsey/composer-install@v3"

      - name: "Run Infection"
        timeout-minutes: 30
        run: "vendor/bin/roave-infection-static-analysis-plugin"
        env:
          INFECTION_DASHBOARD_API_KEY: "${{ secrets.INFECTION_DASHBOARD_API_KEY }}"
          STRYKER_DASHBOARD_API_KEY: "${{ secrets.STRYKER_DASHBOARD_API_KEY }}"
